
For tags : pytaglib
for GUI : pyqt
For playback : GStreamerAudio
		i.e. :  gst-python  in Community,
			 python-gobject in Extra
			... ooof
			...and gst-libav to read mp3 and flac

Done
	conf file -> done
	sort function -> done
	Add a not leaf node from tree to playlist -> done
	gapeless playback -> done
	if remove playing element from playlist, stop playback -> done
	add subfolder to database -> done
	Pipe interface (raccourcis globaux et ssh) -> Done
	search tabs-> Done
	fuzy search in librairie -> Done
	Artwork ->Done
	Custom shortcuts -> Done
	- Add to playlist, w/wo playing -> Done
	- write readme in markdown for github -> Done
	- shortcuts reminder-> Done
	- When playback stoped and toggle play pause : play last song played ->Done
	- Search functions in librairy -> Done
	- Web radio -> Done
	- Connect/disconnect on about to finish if radio or playlist mode -> Done
	- Boutons play pause stop next previous -> Done
	- Update shortcut list in menu -> Done
	- Add support for up and down in pipe in radio mode, disable left and right -> Done
	
Primary

	- refactorize code : separate class player, search bar and boutons and artwork from table class
	- deleteLater when closing widget
	
	
		
	- Replay Gain ->TBD
	
	- Artwork behavior :
		* Fixed on song playing
		* Following playlist selection
		* Following librairy selection
		* Following playlist and librairy
	- Tagging functionalities
		- retagging a song
		- updateing the database with only that song
	
	- PLaying history / stats
	
Secondary
	- Histogram display, vu meter, spectrogram, ...
	- volume bar style (stylesheet)
	- Randomize playlist/Shuffle
	- Option to activate or deactivaate remote interface 
	- Webradio tags -> Dirty but Done
	- webradio images -> API usable but tags from radio very inconcistent
---------------------------------------------------------------------


	
	
echo # Foo.cd >> README.md
git init
git add README.md
git commit -m "first commit"
git remote add origin https://github.com/newmonade/Foo.cd.git
git push -u origin master
